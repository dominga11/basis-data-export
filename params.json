{"name":"Basis Data Export Utility","tagline":"Utility that exports your Basis device's uploaded sensor device data from their website.","body":"# Basis Data Export\r\n\r\nUtility that exports and saves your Basis B1 device's uploaded sensor data.\r\nYou can learn more about Basis at [http://www.mybasis.com/](http://www.mybasis.com/)\r\n\r\n## Instructions\r\n\r\nIn order to use this script, you must already have a Basis account (and a Basis B1 band).\r\n\r\n### Usage:\r\nThis script can be run several ways. You can (and should probably) first edit the `BASIS_USERNAME`, `BASIS_PASSWORD`, and `BASIS_EXPORT_FORMAT` values under \"Settings\" in the file `basisdataexport.php` so you don't have to specify those values every time the script is run. Make sure the `data/` folder is writable!\r\n\r\n![basis export config](http://www.quantifiedbob.com/images/basis-screenshots/basis-export-screenshot-config.png)\r\n\r\n### Method 1 - Interactive Mode\r\n\r\n![basis export option 1](http://www.quantifiedbob.com/images/basis-screenshots/basis-export-screenshot-1.png)\r\n\r\n1. Open a terminal window and cd to this script's directory\r\n2. Type `php basisdataexport.php`\r\n3. Follow the prompts (hit ENTER to use default values)\r\n4. Your data will be saved to `/data/basis-data-[YYYY-MM-DD].[format]`\r\n\r\n\r\n### Method 2 - Via command-line arguments (useful for crons)\r\n\r\n![basis export option 2](http://www.quantifiedbob.com/images/basis-screenshots/basis-export-screenshot-2.png)\r\n\r\nUsage `php basisdataexport.php -h -u[username] -p[pass] -d[YYYY-MM-DD] -f[json|csv|html]`\r\n```\r\nOptions:\r\n  -u  Basis username (if not used, defaults to BASIS_USERNAME)\r\n  -p  Basis password (if not used, defaults to BASIS_PASSWORD)\r\n  -d  Data export date (YYYY-MM-DD) (if not used, defaults to current date)\r\n  -f  Data export format (json|csv|html) (if not used, defaults to json)\r\n  -h  Show this help text\r\n```\r\nMake sure there are no spaces between any flags and values!\r\n\r\n### Method 3 - Via web browser\r\nThis requires that the scripts are in a location that is executable via a web server.\r\n\r\n`http://localhost/basis-data-export/basisdataexport.php?u=[basis_username]&p=[basis_password]&d=[YYYY-MM-DD]&f=[format]`\r\n\r\n## Saving Your Data\r\nIf the script runs successfully, your data will be saved in the `data/` folder. Files are saved in the format `basis-data-[YYYY-MM-DD].[format]` (i.e., `basis-data-2014-04-04.json`).\r\n\r\nThat's it! (for now).\r\n\r\n\r\n## Data Values\r\n\r\nBasis currently returns the following data points. They will represent an average (for heart rate) or sum (steps) over the previous 1-minute period:\r\n\r\n- Time - time reading was taken\r\n- Heart Rate - beats per minute\r\n- Steps - number of steps taken\r\n- Calories - number of calories burned\r\n- GSR - Galvanic skin response (i.e., sweat/skin conductivity. Learn more about GSR here - [http://en.wikipedia.org/wiki/Skin_conductance](http://en.wikipedia.org/wiki/Skin_conductance)\r\n- Skin Temperature - skin temperature (degrees F)\r\n- Air Temperature - air temperatute (degrees F)\r\n\r\nThere are some other aggregate metrics included in the reponse such as min/max/average/standard deviation metrics for each set of data.\r\n\r\n### Tips\r\n- You can set up a cron to run once per day to automatically grab your previous day's data (assuming you are syncing your device each day)\r\n- If you want to archive data across a date range you can use curl's [ ] syntax to do it easily (thanks to [@Edrabbit](http://twitter.com/edrabbit) for the tip!). For example, to get all of May cached in /data:\r\n\r\n  `curl http://localhost/basis-data-export/basisdataexport.php?date=2013-05-[01-31]`","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}